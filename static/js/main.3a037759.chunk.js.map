{"version":3,"sources":["store/index.ts","components/TodosList.tsx","helpers/api.ts","components/LoadButton.tsx","helpers/constants.ts","components/SortButtons.tsx","App.tsx","index.tsx"],"names":["getLoading","state","loading","getLoaded","loaded","getError","error","getIsReversed","isReversed","getSortedTodos","todos","sortBy","sortedTodos","sort","a","b","title","localeCompare","Number","completed","user","name","reverse","initialState","store","createStore","action","type","filter","todo","id","composeWithDevTools","TodosList","dispatch","useDispatch","useSelector","className","map","key","cn","onClick","deleteTodo","API_URL","fetchTodos","fetch","response","json","fetchUsers","getPreparedTodos","Promise","all","users","find","currentUser","userId","LoadButton","loadTodos","fetchedTodos","disabled","SORT_BUTTONS","SortButtons","setIsReversed","App","console","log","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a037759.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst SET_TODOS = 'SET_TODOS';\nconst START_LOADING = 'START_LOADING';\nconst SET_LOADED = 'SET_LOADED';\nconst SORT_BY = 'SORT_BY';\nconst DELETE_TODO = 'DELETE_TODO';\nconst SET_IS_REVERSED = 'SET_IS_REVERSED';\nconst SET_ERROR = 'SET_ERROR';\n\n// Action creators - a function returning an action object\nexport const setTodos = (todos: Todo[]) => {\n  return {\n    type: SET_TODOS,\n    todos,\n  };\n};\n\nexport const setSortBy = (sortBy: string) => {\n  return {\n    type: SORT_BY,\n    sortBy,\n  };\n};\n\nexport const deleteTodo = (id: number) => {\n  return {\n    type: DELETE_TODO,\n    id,\n  };\n};\n\nexport const setIsReversed = (isReversed: boolean) => {\n  return {\n    type: SET_IS_REVERSED,\n    isReversed\n  };\n};\n\nexport const setError = (error: string) => {\n  return {\n    type: SET_ERROR,\n    error\n  };\n};\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const setIsLoaded = () => ({ type: SET_LOADED });\n\n// Selectors - a function receiving Redux state and returning some data from it\nexport const getTodos = (state: RootState) => state.todos;\nexport const getLoading = (state: RootState) => state.loading;\nexport const getLoaded = (state: RootState) => state.loaded;\nexport const getSortBy = (state: RootState) => state.sortBy;\nexport const getError = (state: RootState) => state.error;\nexport const getIsReversed = (state: RootState) => state.isReversed;\nexport const getSortedTodos = ({ todos, sortBy, isReversed }: RootState) => {\n  const sortedTodos = [...todos];\n\n  switch (sortBy) {\n    case 'title':\n      sortedTodos.sort((a, b) => (\n        a.title.localeCompare(b.title)\n      ));\n      break;\n\n    case 'completed':\n      sortedTodos.sort((a, b) => (\n        Number(b.completed) - Number(a.completed)\n      ));\n      break\n\n    case 'name':\n      sortedTodos.sort((a, b) => (\n        a.user.name.localeCompare(b.user.name)\n      ));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    sortedTodos.reverse();\n  }\n\n  return sortedTodos;\n};\n\n// Initial state\nconst initialState: RootState = {\n  todos: [],\n  loading: false,\n  loaded: false,\n  sortBy: '',\n  isReversed: false,\n  error: ''\n};\n\n// rootReducer - this function is called after dispatching an action\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.todos,\n      };\n\n    case START_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case SET_LOADED:\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n      };\n\n    case SET_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n\n    case SORT_BY:\n      return {\n        ...state,\n        sortBy: action.sortBy,\n      };\n\n    case SET_IS_REVERSED:\n      return {\n        ...state,\n        isReversed: action.isReversed,\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id),\n      };\n\n    default:\n      return state;\n  }\n};\n\n// The `store` should be passed to the <Provider store={store}> in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTodo, getSortedTodos } from '../store';\n\nexport const TodosList = () => {\n  const dispatch = useDispatch();\n  const sortedTodos = useSelector(getSortedTodos);\n\n  return (\n    <ul className=\"collection\">\n      {sortedTodos.map(({\n        id, title, completed, user,\n      }) => (\n        <li\n          className=\"collection-item\"\n          key={id}\n        >\n          <span className=\"name\">{user.name}</span>\n          <p>{title}</p>\n          <i className={cn(\n            'material-icons',\n            'medium',\n            { 'cyan-text': completed, 'pink-text darken-4': !completed },\n          )}\n          >\n            {completed ? 'sentiment_very_satisfied' : 'sentiment_dissatisfied'}\n          </i>\n          <button\n            type=\"button\"\n            className=\"btn-floating red btn-small\"\n            onClick={() => dispatch(deleteTodo(id))}\n          >\n            <i className=\"material-icons\">delete</i>\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const fetchTodos = async (): Promise<TodoFromServer[]> => {\n  const response = await fetch(`${API_URL}/todos`);\n\n  return response.json();\n};\n\nexport const fetchUsers = async (): Promise<User[]> => {\n  const response = await fetch(`${API_URL}/users`);\n\n  return response.json();\n};\n\nexport const getPreparedTodos = async (): Promise<Todo[]> => {\n  const [todos, users] = await Promise.all([fetchTodos(), fetchUsers()]);\n\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(currentUser => todo.userId === currentUser.id) as User,\n  }));\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPreparedTodos } from '../helpers/api';\nimport {\n  setTodos, getLoading, setIsLoaded, startLoading, setError,\n} from '../store';\n\nexport const LoadButton = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(getLoading);\n\n  const loadTodos = async () => {\n    dispatch(startLoading());\n    try {\n      const fetchedTodos = await getPreparedTodos();\n\n      dispatch(setTodos(fetchedTodos));\n      dispatch(setIsLoaded());\n      } catch (error) {\n        dispatch(setError(`Something went wrong: ${error}`));\n      }\n    dispatch(setIsLoaded());\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-primary btn-lg mb-2\"\n      onClick={loadTodos}\n      disabled={loading}\n    >\n      {loading ? 'Loading...' : 'Load todos'}\n    </button>\n  );\n};\n","export const SORT_BUTTONS: Sorts[] = [\n  {\n    id: 1,\n    name: 'title',\n    title: 'Title',\n  },\n\n  {\n    id: 2,\n    name: 'completed',\n    title: 'Completeness',\n  },\n\n  {\n    id: 3,\n    name: 'name',\n    title: 'Name',\n  },\n];\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SORT_BUTTONS } from '../helpers/constants';\nimport { setSortBy, setIsReversed, getIsReversed } from '../store';\n\nexport const SortButtons = () => {\n  const dispatch = useDispatch();\n  const isReversed = useSelector(getIsReversed);\n\n  return (\n    <>\n      {SORT_BUTTONS.map(({ id, name, title }) => (\n        <button\n          key={id}\n          type=\"button\"\n          className=\"waves-effect waves-light btn-large\"\n          onClick={() => dispatch(setSortBy(name))}\n        >\n          {title}\n        </button>\n      ))}\n      <button\n        type=\"button\"\n        className=\"btn-floating btn-large cyan darken-4 ml1\"\n        onClick={() => dispatch(setIsReversed(!isReversed))}\n      >\n        <i className=\"material-icons\">autorenew</i>\n      </button>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { useSelector } from 'react-redux';\nimport { TodosList } from './components/TodosList';\nimport { LoadButton } from './components/LoadButton';\nimport { getLoaded, getError } from './store';\nimport { SortButtons } from './components/SortButtons';\n\nconst App = () => {\n  const loaded = useSelector(getLoaded);\n  const error = useSelector(getError);\n  console.log(error);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"row center-align\">Dynamic list of TODOs</h1>\n      {(loaded && !error) ? (\n        <>\n          <div className=\"row center-align\">\n            <SortButtons />\n          </div>\n          <div className=\"row\">\n            <div className=\"col s6 offset-s3\">\n              <TodosList />\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"row center-align\">\n          <LoadButton />\n          <p>{error}</p>\n        </div>\n      )}\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}